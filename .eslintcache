[{"F:\\projects\\onboard\\src\\index.js":"1","F:\\projects\\onboard\\src\\reportWebVitals.js":"2","F:\\projects\\onboard\\src\\App.js":"3","F:\\projects\\onboard\\src\\aws-exports.js":"4","F:\\projects\\onboard\\src\\graphql\\queries.js":"5","F:\\projects\\onboard\\src\\components\\Navbar.js":"6","F:\\projects\\onboard\\src\\components\\Button.js":"7","F:\\projects\\onboard\\src\\components\\pages\\Home.js":"8","F:\\projects\\onboard\\src\\components\\Cards.js":"9","F:\\projects\\onboard\\src\\components\\CardItem.js":"10","F:\\projects\\onboard\\src\\components\\pages\\ListRequests.js":"11","F:\\projects\\onboard\\src\\components\\pages\\CreateRequest.js":"12","F:\\projects\\onboard\\src\\components\\Footer.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":2888,"mtime":1611005439441,"results":"17","hashOfConfig":"15"},{"size":734,"mtime":1609522116934,"results":"18","hashOfConfig":"15"},{"size":5723,"mtime":1609516058928,"results":"19","hashOfConfig":"15"},{"size":2213,"mtime":1609874443638,"results":"20","hashOfConfig":"15"},{"size":699,"mtime":1609867908622,"results":"21","hashOfConfig":"15"},{"size":296,"mtime":1609874905190,"results":"22","hashOfConfig":"15"},{"size":514,"mtime":1609873432118,"results":"23","hashOfConfig":"15"},{"size":617,"mtime":1609873381055,"results":"24","hashOfConfig":"15"},{"size":160,"mtime":1609873874181,"results":"25","hashOfConfig":"15"},{"size":6009,"mtime":1611014420880,"results":"26","hashOfConfig":"15"},{"size":1280,"mtime":1609875221621,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"g9oo6h",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"F:\\projects\\onboard\\src\\index.js",[],["59","60"],"F:\\projects\\onboard\\src\\reportWebVitals.js",[],"F:\\projects\\onboard\\src\\App.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import './App.css';\nimport React, {useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Paper from '@material-ui/core/Paper';\n\nimport Amplify, {API, graphqlOperation} from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { AmplifySignOut, withAuthenticator } from '@aws-amplify/ui-react';\n\nimport Navbar from './components/Navbar';\nimport Home from './components/pages/Home';\nimport ListRequests from './components/pages/ListRequests';\nimport CreateRequest from './components/pages/CreateRequest';\nimport {BrowserRouter as Router,Switch, Route} from 'react-router-dom';\n\nAmplify.configure(awsconfig);\n\n\nfunction App() {\n  \n  const [state, setState] = React.useState({\n    dataType: ''\n  });\n\n  const [dataTypes, setDataTypes] = React.useState([]);\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  return (\n    <>\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/createRequest' exact component={CreateRequest} />\n        <Route path='/listRequests' exact component={ListRequests} />\n      </Switch>\n    </Router>    \n    </>  \n\n    /*useEffect(() => {\n        fetchDataTypes();\n      }, [])\n    \n      const fetchDataTypes = async () => {\n        try {\n            const dataTypeData = await API.graphql(graphqlOperation(listDataTypes));\n            const dataTypeList = dataTypeData.data.listDataTypes.items;\n            console.log('datatype list', dataTypeList);\n            setDataTypes(dataTypeList);\n        } catch (error) {\n            console.log('error on fetching songs', error);\n        }\n    }; // render\n    <div className=\"dataTypeList\">\n                <FormControl className=\"dataTypeForm\">  \n                    <InputLabel htmlFor=\"dataType-native-simple\">Data Type</InputLabel>\n                    <Select native value={state.dataType} onChange={handleChange} inputProps={{\n                        name: 'dataType',\n                        id: 'dataType-native-simple',\n                        }}\n                    >\n                        <option aria-label=\"None\" value=\"\" />\n                        { dataTypes.map(item => {\n                            return (\n                                <option value={item.id}>{item.key} - {item.version}</option>\n                            )\n                        })}\n                    </Select>\n                </FormControl>\n            </div>  */\n      \n  );\n}\n\nexport default withAuthenticator(App);\n","F:\\projects\\onboard\\src\\aws-exports.js",[],"F:\\projects\\onboard\\src\\graphql\\queries.js",[],"F:\\projects\\onboard\\src\\components\\Navbar.js",["76","77"],"import './Navbar.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AmplifySignOut} from '@aws-amplify/ui-react';\r\n\r\nimport { Button } from './Button';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>Onboard-Accellerator</Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/createRequest' className='nav-links' onClick={closeMobileMenu}>\r\n                                Create Request\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/listRequests' className='nav-links' onClick={closeMobileMenu}>\r\n                                List Requests\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'><AmplifySignOut /></li>\r\n                    </ul>\r\n                   \r\n                </div>\r\n\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","F:\\projects\\onboard\\src\\components\\Button.js",[],"F:\\projects\\onboard\\src\\components\\pages\\Home.js",[],"F:\\projects\\onboard\\src\\components\\Cards.js",[],"F:\\projects\\onboard\\src\\components\\CardItem.js",[],["78","79"],"F:\\projects\\onboard\\src\\components\\pages\\ListRequests.js",[],"F:\\projects\\onboard\\src\\components\\pages\\CreateRequest.js",["80","81","82","83","84","85","86","87","88","89"],"import React, {useState, useEffect } from 'react';\r\nimport '../../App.css';\r\nimport PropTypes from 'prop-types';\r\nimport { listDataTypes } from '../../graphql/queries';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport validator from 'validator';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nimport Amplify, {API, graphqlOperation} from 'aws-amplify';\r\n//import CreateDataRequest from './CreateDataRequest';\r\n\r\nfunction CreateRequest() {\r\n    const [state, setState] = React.useState({\r\n        dataType: '',\r\n        dataLabel: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        ownerEmailAddress: '',        \r\n        requestedData: []\r\n      });\r\n    \r\n      const [dataTypes, setDataTypes] = React.useState([]);\r\n    \r\n      const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        setState({\r\n          ...state,\r\n          [name]: event.target.value,\r\n        });\r\n      };\r\n    useEffect(() => {\r\n        fetchDataTypes();\r\n      }, [])\r\n    \r\n    const fetchDataTypes = async () => {\r\n        try {\r\n            const dataTypeData = await API.graphql(graphqlOperation(listDataTypes));\r\n            const dataTypeList = dataTypeData.data.listDataTypes.items;\r\n            console.log('datatype list', dataTypeList);\r\n            setDataTypes(dataTypeList);\r\n        } catch (error) {\r\n            console.log('error on fetching songs', error);\r\n        }\r\n    };\r\n\r\n    const validateEmail = (e) => { \r\n        var email = e.target.value \r\n      \r\n        /*if (validator.isEmail(email)) { \r\n          setEmailError('Valid Email :)') \r\n        } else { \r\n          setEmailError('Enter valid Email!') \r\n        } */\r\n      }; \r\n    \r\n    return (\r\n        <>\r\n            <h1 className='create-request'>Create New Request</h1>\r\n            <Container maxWidth=\"sm\"><form className=\"createRequestForm\" autoComplete=\"off\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className=\"firstName\">\r\n                            <TextField required label=\"First Name\" variant=\"outlined\" native type=\"email\" value={state.firstName} onChange={handleChange} inputProps={{\r\n                                name: 'firstName',\r\n                                id: 'firstName'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className=\"lastName\">                            \r\n                            <TextField required label=\"Last Name\" variant=\"outlined\" native value={state.lastName} onChange={handleChange} inputProps={{\r\n                                name: 'lastName',\r\n                                id: 'lastName-native-simple'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className=\"emailAddress\">                            \r\n                            <TextField required label=\"Email Address\" variant=\"outlined\" native value={state.emailAddress} onChange={handleChange} inputProps={{\r\n                                name: 'emailAddress',\r\n                                id: 'emailAddress-native-simple'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Divider className='divider' />\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"secondary\">Add Data Element</Button>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl required className=\"dataTypeForm\" variant=\"outlined\">  \r\n                            <InputLabel htmlFor=\"dataType-native-simple\">Data Type</InputLabel>\r\n                            <Select native value={state.dataType} onChange={handleChange} inputProps={{\r\n                                name: 'dataType',\r\n                                id: 'dataType-native-simple',\r\n                                }}\r\n                            >\r\n                                <option aria-label=\"None\" value=\"\" />\r\n                                { dataTypes.map(item => {\r\n                                    return (\r\n                                        <option value={item.id}>{item.key} - {item.version}</option>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <FormControl className=\"dataLabel\">                            \r\n                            <TextField required label=\"Data Label\" variant=\"outlined\" native value={state.dataLabel} onChange={handleChange} inputProps={{\r\n                                name: 'dataLabel',\r\n                                id: 'dataLabel-native-simple'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\">Submit</Button>\r\n                    </Grid>                    \r\n                </Grid></form>\r\n            </Container>                \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateRequest;\r\n\r\n\r\n","F:\\projects\\onboard\\src\\components\\Footer.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":24},{"ruleId":"94","severity":1,"message":"98","line":2,"column":26,"nodeType":"96","messageId":"97","endLine":2,"endColumn":35},{"ruleId":"94","severity":1,"message":"99","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":20},{"ruleId":"94","severity":1,"message":"100","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":18},{"ruleId":"94","severity":1,"message":"101","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":22},{"ruleId":"94","severity":1,"message":"102","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":19},{"ruleId":"94","severity":1,"message":"103","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"94","severity":1,"message":"104","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":20},{"ruleId":"94","severity":1,"message":"105","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":13},{"ruleId":"94","severity":1,"message":"106","line":12,"column":18,"nodeType":"96","messageId":"97","endLine":12,"endColumn":21},{"ruleId":"94","severity":1,"message":"107","line":12,"column":23,"nodeType":"96","messageId":"97","endLine":12,"endColumn":39},{"ruleId":"94","severity":1,"message":"108","line":14,"column":10,"nodeType":"96","messageId":"97","endLine":14,"endColumn":24},{"ruleId":"94","severity":1,"message":"109","line":31,"column":10,"nodeType":"96","messageId":"97","endLine":31,"endColumn":19},{"ruleId":"94","severity":1,"message":"110","line":31,"column":21,"nodeType":"96","messageId":"97","endLine":31,"endColumn":33},{"ruleId":"94","severity":1,"message":"111","line":33,"column":9,"nodeType":"96","messageId":"97","endLine":33,"endColumn":21},{"ruleId":"94","severity":1,"message":"112","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":16},{"ruleId":"94","severity":1,"message":"113","line":10,"column":12,"nodeType":"96","messageId":"97","endLine":10,"endColumn":18},{"ruleId":"90","replacedBy":"114"},{"ruleId":"92","replacedBy":"115"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":24},{"ruleId":"94","severity":1,"message":"116","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"99","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"117","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":13},{"ruleId":"94","severity":1,"message":"101","line":11,"column":8,"nodeType":"96","messageId":"97","endLine":11,"endColumn":22},{"ruleId":"94","severity":1,"message":"118","line":16,"column":8,"nodeType":"96","messageId":"97","endLine":16,"endColumn":17},{"ruleId":"94","severity":1,"message":"104","line":18,"column":8,"nodeType":"96","messageId":"97","endLine":18,"endColumn":20},{"ruleId":"94","severity":1,"message":"119","line":20,"column":8,"nodeType":"96","messageId":"97","endLine":20,"endColumn":15},{"ruleId":"94","severity":1,"message":"120","line":58,"column":11,"nodeType":"96","messageId":"97","endLine":58,"endColumn":24},{"ruleId":"94","severity":1,"message":"121","line":59,"column":13,"nodeType":"96","messageId":"97","endLine":59,"endColumn":18},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","'Paper' is defined but never used.","'API' is defined but never used.","'graphqlOperation' is defined but never used.","'AmplifySignOut' is defined but never used.","'dataTypes' is assigned a value but never used.","'setDataTypes' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Button' is defined but never used.","'button' is assigned a value but never used.",["122"],["123"],"'PropTypes' is defined but never used.","'Input' is defined but never used.","'validator' is defined but never used.","'Amplify' is defined but never used.","'validateEmail' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]