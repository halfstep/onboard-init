[{"F:\\projects\\onboard\\src\\index.js":"1","F:\\projects\\onboard\\src\\reportWebVitals.js":"2","F:\\projects\\onboard\\src\\App.js":"3","F:\\projects\\onboard\\src\\aws-exports.js":"4","F:\\projects\\onboard\\src\\graphql\\queries.js":"5","F:\\projects\\onboard\\src\\components\\Navbar.js":"6","F:\\projects\\onboard\\src\\components\\Button.js":"7","F:\\projects\\onboard\\src\\components\\pages\\Home.js":"8","F:\\projects\\onboard\\src\\components\\Cards.js":"9","F:\\projects\\onboard\\src\\components\\CardItem.js":"10","F:\\projects\\onboard\\src\\components\\pages\\ListRequests.js":"11","F:\\projects\\onboard\\src\\components\\pages\\CreateRequest.js":"12","F:\\projects\\onboard\\src\\components\\Footer.js":"13","F:\\projects\\onboard\\src\\graphql\\mutations.js":"14","F:\\projects\\onboard\\src\\components\\pages\\GetRequest.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":3025,"mtime":1611891462433,"results":"19","hashOfConfig":"17"},{"size":734,"mtime":1611015041664,"results":"20","hashOfConfig":"17"},{"size":5777,"mtime":1611016734438,"results":"21","hashOfConfig":"17"},{"size":2213,"mtime":1609874443638,"results":"22","hashOfConfig":"17"},{"size":699,"mtime":1609867908622,"results":"23","hashOfConfig":"17"},{"size":296,"mtime":1609874905190,"results":"24","hashOfConfig":"17"},{"size":514,"mtime":1609873432118,"results":"25","hashOfConfig":"17"},{"size":617,"mtime":1609873381055,"results":"26","hashOfConfig":"17"},{"size":6740,"mtime":1611890917298,"results":"27","hashOfConfig":"17"},{"size":8952,"mtime":1611891053504,"results":"28","hashOfConfig":"17"},{"size":1280,"mtime":1609875221621,"results":"29","hashOfConfig":"17"},{"size":6310,"mtime":1611034482673,"results":"30","hashOfConfig":"17"},{"size":8393,"mtime":1611901558845,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g9oo6h",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\projects\\onboard\\src\\index.js",[],["66","67"],"F:\\projects\\onboard\\src\\reportWebVitals.js",[],"F:\\projects\\onboard\\src\\App.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"F:\\projects\\onboard\\src\\aws-exports.js",[],"F:\\projects\\onboard\\src\\graphql\\queries.js",[],"F:\\projects\\onboard\\src\\components\\Navbar.js",["84","85"],"import './Navbar.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AmplifySignOut} from '@aws-amplify/ui-react';\r\n\r\nimport { Button } from './Button';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if(window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    window.addEventListener('resize', showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>Onboard-Accellerator</Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/createRequest' className='nav-links' onClick={closeMobileMenu}>\r\n                                Create Request\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/listRequests' className='nav-links' onClick={closeMobileMenu}>\r\n                                List Requests\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'><AmplifySignOut /></li>\r\n                    </ul>\r\n                   \r\n                </div>\r\n\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","F:\\projects\\onboard\\src\\components\\Button.js",[],"F:\\projects\\onboard\\src\\components\\pages\\Home.js",[],"F:\\projects\\onboard\\src\\components\\Cards.js",[],"F:\\projects\\onboard\\src\\components\\CardItem.js",[],"F:\\projects\\onboard\\src\\components\\pages\\ListRequests.js",["86","87","88","89"],"import React, {useState, useEffect, Fragment} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Amplify, {API, graphqlOperation} from 'aws-amplify';\r\nimport {listDataRequests, listDataElements } from '../../graphql/queries';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport '../../App.css';\r\n\r\nfunction ListRequest() {\r\n    const [state, setState] = React.useState({                \r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        ownerEmailAddress: '',    \r\n        responseData: [{\r\n            id: '',\r\n            key: '',\r\n            label: '',\r\n            dataValue: ''\r\n        }]\r\n      });\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    const [requestData, setRequestData] = React.useState([]);\r\n    const [dataElements, setDataElements] = React.useState([]);\r\n\r\n    const requestColumns = [\r\n        \r\n        { field: 'firstName', headerName: 'First name', width: 130 },\r\n        { field: 'lastName', headerName: 'Last name', width: 130 },\r\n        { field: 'emailAddress', headerName: 'Email Address', width: 250, },       \r\n        { field: 'status', headerName: 'Status', width: 200 },\r\n        { field: 'createTimestamp', headerName: 'Created On', type: 'date', width:150 },\r\n        { field: 'id', headerName: 'Action', width:300, renderCell: (params) => (\r\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick = {() => handleClickOpen(params.value) }>\r\n                View Data\r\n              </Button>\r\n          )\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchRequests();\r\n        setOpen(false);\r\n      }, [])\r\n\r\n    const fetchRequests = async () => {\r\n        try {        \r\n            console.log('fetching data');    \r\n            const requestData = await API.graphql(graphqlOperation(listDataRequests));\r\n            const requestList = requestData.data.listDataRequests.items;\r\n            console.log('request list', requestList);\r\n            setRequestData(requestList);\r\n            \r\n        } catch (error) {\r\n            console.log('error on fetching dataTypes', error);\r\n        }\r\n    };\r\n\r\n    const fetchDataElements = async(id) => {\r\n        try {\r\n            const dataElements = await API.graphql(graphqlOperation(listDataElements, {\r\n                filter:{\r\n                    datarequestID: {\r\n                        eq: id \r\n                    }\r\n                }\r\n            }));\r\n            const dataElementsList = dataElements.data.listDataElements.items;\r\n            console.log('dataElementsList:');\r\n            console.log(dataElementsList);\r\n            setDataElements(dataElementsList);\r\n            setState({\r\n                ...state,\r\n                \"responseData\": dataElementsList \r\n            });\r\n        } catch (error) {\r\n            console.log('error on fetching data response', error);\r\n        }\r\n    };\r\n\r\n    const handleClickOpen = (id) => {\r\n        console.log('handleClickOpen - id: ' + id);\r\n        fetchDataElements(id);\r\n        setOpen(true);\r\n      };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <h1 className='list-requests'>List Request</h1>\r\n        <Container >\r\n            <Grid container spacing={3}> \r\n                <Grid item xs={12}>\r\n                    <DataGrid rows={requestData} columns={requestColumns} pageSize={15} autoHeight=\"true\"  />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n\r\n        <Dialog fullWidth={true} maxWidth=\"lg\" open={open} onClose={handleClose} aria-labelledby=\"response-data-title\">\r\n        <DialogTitle id=\"response-data-title\">Response Data</DialogTitle>\r\n        <DialogContent>\r\n            <form noValidate>               \r\n                {\r\n                    state.responseData.map(function(element, index) {\r\n                        return (\r\n                            <Fragment key={element.id}>     \r\n                             <Container maxWidth=\"sm\">\r\n                             <Grid container spacing={3}>\r\n                                <Grid item xs={4} >\r\n                                    <FormControl required className=\"dataTypeForm\" variant=\"outlined\">  \r\n                                        <TextField label=\"Data Type\" variant=\"outlined\" \r\n                                            native value={element.key} \r\n                                            inputProps={{name: 'dataType-' + index,id: 'dataType-' + index, readOnly:true}}/>                                  \r\n                                    </FormControl>\r\n                                </Grid> \r\n                                <Grid item xs={4}>\r\n                                    <FormControl className=\"dataLabel\">\r\n                                        <TextField label=\"Data Label\" variant=\"outlined\" native value={element.label} \r\n                                            inputProps={{name: 'dataLabel-' + index,id: 'dataLabel-' + index, readOnly:true}}/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                    <FormControl className=\"dataLabel\">\r\n                                        <TextField label=\"Data Value\" variant=\"outlined\" native value={element.dataValue} \r\n                                            inputProps={{name: 'dataValue-' + index,id: 'dataValue-' + index, readOnly:true}}/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                </Grid>    \r\n                             </Container>                              \r\n                            </Fragment> \r\n                        )    \r\n                    })\r\n                }     \r\n            </form>                 \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button  color=\"primary\" onClick={handleClose}>\r\n            Mark Complete\r\n          </Button>\r\n          <Button  color=\"primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n        </>\r\n    );    \r\n}\r\n\r\nexport default ListRequest;","F:\\projects\\onboard\\src\\components\\pages\\CreateRequest.js",["90","91","92","93","94","95","96","97","98","99","100"],"import React, {useState, useEffect, Fragment } from 'react';\r\nimport '../../App.css';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport validator from 'validator';\r\n\r\nimport Amplify, {API, graphqlOperation, Auth} from 'aws-amplify';\r\nimport { listDataTypes, listDataRequests } from '../../graphql/queries';\r\nimport { createDataRequest, createDataElement } from '../../graphql/mutations';\r\n\r\nfunction CreateRequest() {\r\n    const [state, setState] = React.useState({                \r\n        firstName: '',\r\n        lastName: '',\r\n        emailAddress: '',\r\n        ownerEmailAddress: '',        \r\n        requestedData: [{\r\n            dataType: '',\r\n            dataLabel: '',\r\n        }]\r\n      });\r\n    \r\n    const [dataTypes, setDataTypes] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    setState({\r\n        ...state,\r\n        [name]: event.target.value,\r\n    });\r\n    };\r\n\r\n    const handleNestedChange = (event) => {\r\n        const id = event.target.id;        \r\n        const split = id.split(\"-\");\r\n        const idx = split[1];\r\n        const field = split[0];        \r\n        const requestedData = state.requestedData;      \r\n        const element = requestedData[idx];\r\n        element[field] = event.target.value;       \r\n        setState({\r\n            ...state,\r\n            \"requestedData\": requestedData \r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDataTypes();\r\n      }, [])\r\n    \r\n    const fetchDataTypes = async () => {\r\n        try {            \r\n            const dataTypeData = await API.graphql(graphqlOperation(listDataTypes));\r\n            const dataTypeList = dataTypeData.data.listDataTypes.items;\r\n            console.log('datatype list', dataTypeList);\r\n            setDataTypes(dataTypeList);\r\n        } catch (error) {\r\n            console.log('error on fetching dataTypes', error);\r\n        }\r\n    };\r\n\r\n    const submitDataElement = async(element) => {              \r\n        const newDataElement = await API.graphql(graphqlOperation(createDataElement, {input: element}));   \r\n    }\r\n\r\n    const submitCreateDataRequest = async() => {\r\n        console.log('create new data request');\r\n        try {\r\n            const requestDetails = {\r\n                firstName: state.firstName,\r\n                lastName: state.lastName,\r\n                emailAddress: state.emailAddress,\r\n                ownerEmailAddress: Auth.user.attributes.email,\r\n                createTimestamp: Math.floor(Date.now() / 1000),\r\n                status: 'PENDINGRESPONSE',               \r\n              };              \r\n            const newDataRequest = await API.graphql(graphqlOperation(createDataRequest, {input: requestDetails}));   \r\n            const elements = [];\r\n            state.requestedData.map(element => {\r\n                const elementDetails = {\r\n                    label: element.dataLabel,\r\n                    key: dataTypes.find(item => {return item.id == element.dataType}).key,\r\n                    datarequestID: newDataRequest.data.createDataRequest.id,\r\n                    dataElementDataTypeId: element.dataType\r\n                };  \r\n                elements.push(elementDetails);           \r\n            });    \r\n            console.log(elements);            \r\n            elements.forEach(submitDataElement);\r\n        } catch (error) {\r\n            console.log('error on creating request', error);\r\n        }\r\n    };\r\n\r\n    const addDataElement = (event) => {\r\n        var dataElements = state.requestedData;\r\n        dataElements.push({\r\n            dataType: '',\r\n            dataLabel: '',\r\n        });\r\n        setState({\r\n            ...state,\r\n            \"requestedData\": dataElements \r\n        })\r\n    };\r\n\r\n    const validateEmail = (e) => { \r\n        var email = e.target.value \r\n      \r\n        /*if (validator.isEmail(email)) { \r\n          setEmailError('Valid Email :)') \r\n        } else { \r\n          setEmailError('Enter valid Email!') \r\n        } */\r\n      }; \r\n    \r\n    return (\r\n        <>\r\n            <h1 className='create-request'>Create New Request</h1>\r\n            <Container maxWidth=\"sm\"><form className=\"createRequestForm\" autoComplete=\"off\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className=\"firstName\">\r\n                            <TextField required label=\"First Name\" variant=\"outlined\" native type=\"email\" value={state.firstName} onChange={handleChange} inputProps={{\r\n                                name: 'firstName',\r\n                                id: 'firstName'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className=\"lastName\">                            \r\n                            <TextField required label=\"Last Name\" variant=\"outlined\" native value={state.lastName} onChange={handleChange} inputProps={{\r\n                                name: 'lastName',\r\n                                id: 'lastName-native-simple'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <FormControl className=\"emailAddress\">                            \r\n                            <TextField required label=\"Email Address\" variant=\"outlined\" native value={state.emailAddress} onChange={handleChange} inputProps={{\r\n                                name: 'emailAddress',\r\n                                id: 'emailAddress-native-simple'\r\n                            }}/>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Divider className='divider' />\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={addDataElement}>Add Data Element</Button>\r\n                    </Grid>\r\n                {\r\n                    state.requestedData.map(function(element, index) {\r\n                        return (\r\n                            <Fragment>                                \r\n                                <Grid item xs={4}>\r\n                                    <FormControl required className=\"dataTypeForm\" variant=\"outlined\">  \r\n                                        <InputLabel htmlFor={'dataType-' + index}>Data Type</InputLabel>\r\n                                        <Select native value={element.dataType} onChange={handleNestedChange} inputProps={{\r\n                                            name: 'dataType-' + index,\r\n                                            id: 'dataType-' + index,\r\n                                            }}\r\n                                        >\r\n                                            <option aria-label=\"None\" value=\"\" />\r\n                                            { dataTypes.map(item => {\r\n                                                return (\r\n                                                    <option value={item.id}>{item.key} - {item.version}</option>\r\n                                                )\r\n                                            })}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> \r\n                                <Grid item xs={8}>\r\n                                    <FormControl className=\"dataLabel\">                            \r\n                                        <TextField required label=\"Data Label\" variant=\"outlined\" native value={element.dataLabel} onChange={handleNestedChange} inputProps={{\r\n                                            name: 'dataLabel-' + index,\r\n                                            id: 'dataLabel-' + index\r\n                                        }}/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Fragment> \r\n                        )    \r\n                    })\r\n                }                                            \r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={submitCreateDataRequest}>Submit</Button>\r\n                    </Grid>                    \r\n                </Grid></form>\r\n            </Container>                \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateRequest;\r\n\r\n\r\n","F:\\projects\\onboard\\src\\components\\Footer.js",[],"F:\\projects\\onboard\\src\\graphql\\mutations.js",[],"F:\\projects\\onboard\\src\\components\\pages\\GetRequest.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":24},{"ruleId":"122","severity":1,"message":"126","line":2,"column":26,"nodeType":"124","messageId":"125","endLine":2,"endColumn":35},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"128","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":18},{"ruleId":"122","severity":1,"message":"129","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":22},{"ruleId":"122","severity":1,"message":"130","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":19},{"ruleId":"122","severity":1,"message":"131","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":14},{"ruleId":"122","severity":1,"message":"132","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":20},{"ruleId":"122","severity":1,"message":"133","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":13},{"ruleId":"122","severity":1,"message":"134","line":12,"column":18,"nodeType":"124","messageId":"125","endLine":12,"endColumn":21},{"ruleId":"122","severity":1,"message":"135","line":12,"column":23,"nodeType":"124","messageId":"125","endLine":12,"endColumn":39},{"ruleId":"122","severity":1,"message":"136","line":14,"column":10,"nodeType":"124","messageId":"125","endLine":14,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":21,"column":48,"nodeType":"124","messageId":"125","endLine":21,"endColumn":57},{"ruleId":"122","severity":1,"message":"138","line":32,"column":10,"nodeType":"124","messageId":"125","endLine":32,"endColumn":19},{"ruleId":"122","severity":1,"message":"139","line":32,"column":21,"nodeType":"124","messageId":"125","endLine":32,"endColumn":33},{"ruleId":"122","severity":1,"message":"140","line":34,"column":9,"nodeType":"124","messageId":"125","endLine":34,"endColumn":21},{"ruleId":"122","severity":1,"message":"141","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":16},{"ruleId":"122","severity":1,"message":"142","line":10,"column":12,"nodeType":"124","messageId":"125","endLine":10,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"143","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":15},{"ruleId":"122","severity":1,"message":"144","line":11,"column":8,"nodeType":"124","messageId":"125","endLine":11,"endColumn":25},{"ruleId":"122","severity":1,"message":"145","line":33,"column":12,"nodeType":"124","messageId":"125","endLine":33,"endColumn":24},{"ruleId":"122","severity":1,"message":"123","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"146","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"147","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":17},{"ruleId":"122","severity":1,"message":"143","line":15,"column":8,"nodeType":"124","messageId":"125","endLine":15,"endColumn":15},{"ruleId":"122","severity":1,"message":"148","line":16,"column":25,"nodeType":"124","messageId":"125","endLine":16,"endColumn":41},{"ruleId":"122","severity":1,"message":"149","line":71,"column":15,"nodeType":"124","messageId":"125","endLine":71,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":87,"column":45,"nodeType":"152","messageId":"153","endLine":87,"endColumn":47},{"ruleId":"154","severity":1,"message":"155","line":90,"column":65,"nodeType":"156","messageId":"157","endLine":90,"endColumn":67},{"ruleId":"122","severity":1,"message":"158","line":115,"column":11,"nodeType":"124","messageId":"125","endLine":115,"endColumn":24},{"ruleId":"122","severity":1,"message":"159","line":116,"column":13,"nodeType":"124","messageId":"125","endLine":116,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":24},{"ruleId":"122","severity":1,"message":"146","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17},{"ruleId":"122","severity":1,"message":"127","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"128","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":18},{"ruleId":"122","severity":1,"message":"131","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":14},{"ruleId":"122","severity":1,"message":"160","line":11,"column":8,"nodeType":"124","messageId":"125","endLine":11,"endColumn":15},{"ruleId":"122","severity":1,"message":"147","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":17},{"ruleId":"122","severity":1,"message":"161","line":14,"column":26,"nodeType":"124","messageId":"125","endLine":14,"endColumn":32},{"ruleId":"122","severity":1,"message":"162","line":14,"column":33,"nodeType":"124","messageId":"125","endLine":14,"endColumn":39},{"ruleId":"122","severity":1,"message":"163","line":14,"column":41,"nodeType":"124","messageId":"125","endLine":14,"endColumn":46},{"ruleId":"122","severity":1,"message":"143","line":16,"column":8,"nodeType":"124","messageId":"125","endLine":16,"endColumn":15},{"ruleId":"122","severity":1,"message":"164","line":16,"column":41,"nodeType":"124","messageId":"125","endLine":16,"endColumn":45},{"ruleId":"122","severity":1,"message":"140","line":33,"column":13,"nodeType":"124","messageId":"125","endLine":33,"endColumn":25},{"ruleId":"122","severity":1,"message":"165","line":83,"column":19,"nodeType":"124","messageId":"125","endLine":83,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":85,"column":38,"nodeType":"152","messageId":"153","endLine":85,"endColumn":40},{"ruleId":"122","severity":1,"message":"149","line":103,"column":19,"nodeType":"124","messageId":"125","endLine":103,"endColumn":33},{"ruleId":"166","severity":1,"message":"167","line":126,"column":10,"nodeType":"168","endLine":126,"endColumn":12,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","'Paper' is defined but never used.","'API' is defined but never used.","'graphqlOperation' is defined but never used.","'AmplifySignOut' is defined but never used.","'useParams' is defined but never used.","'dataTypes' is assigned a value but never used.","'setDataTypes' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Button' is defined but never used.","'button' is assigned a value but never used.","'Amplify' is defined but never used.","'DialogContentText' is defined but never used.","'dataElements' is assigned a value but never used.","'PropTypes' is defined but never used.","'validator' is defined but never used.","'listDataRequests' is defined but never used.","'newDataElement' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'validateEmail' is assigned a value but never used.","'email' is assigned a value but never used.","'Divider' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Auth' is defined but never used.","'updatedDataRequest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRequest'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [fetchRequest]",{"range":"175","text":"176"},[4879,4881],"[fetchRequest]"]